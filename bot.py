import logging
import os
from dotenv import load_dotenv
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, ContextTypes

load_dotenv()

logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logging.getLogger("httpx").setLevel(logging.WARNING)
logger = logging.getLogger(__name__)

BOT_TOKEN = os.getenv('BOT_TOKEN')
WEBAPP_URL = os.getenv('WEBAPP_URL')

if not BOT_TOKEN:
    logger.error("–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ BOT_TOKEN! –ü–µ—Ä–µ–≤—ñ—Ä –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞.")
    exit()
if not WEBAPP_URL:
    logger.warning("–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ WEBAPP_URL! –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è WebApp –Ω–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏–º–µ.")


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ù–∞–¥—Å–∏–ª–∞—î –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è —Ç–∞ –∫–Ω–æ–ø–∫—É –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è Web App."""
    if not WEBAPP_URL:
         await update.message.reply_text("–ù–∞ –∂–∞–ª—å, URL –≤–µ–±-–¥–æ–¥–∞—Ç–∫—É –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ.")
         return

    web_app_info = WebAppInfo(url=WEBAPP_URL)
    button = InlineKeyboardButton(text="üöÄ –í—ñ–¥–∫—Ä–∏—Ç–∏ –ü–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫", web_app=web_app_info)
    keyboard = InlineKeyboardMarkup([[button]])

    await update.message.reply_text(
        "–ü—Ä–∏–≤—ñ—Ç! üëã –ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –≤—ñ–¥–∫—Ä–∏—Ç–∏ —Å–≤—ñ–π –ø–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫ –∑–∞–≤–¥–∞–Ω—å:",
        reply_markup=keyboard
    )

async def planner(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–æ–±–ª—è—î –∫–æ–º–∞–Ω–¥—É /planner, —Å–∏–Ω–æ–Ω—ñ–º /start."""
    await start(update, context)


def main() -> None:
    """–ó–∞–ø—É—Å–∫–∞—î –±–æ—Ç–∞."""
    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")

    application = Application.builder().token(BOT_TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("planner", planner))

    logger.info("–ë–æ—Ç –ø–æ—á–∏–Ω–∞—î –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è...")
    application.run_polling()

if __name__ == "__main__":
    main()
